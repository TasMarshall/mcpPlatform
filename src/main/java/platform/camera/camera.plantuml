@startuml

title __CAMERA's Class Diagram__\n

  package platform {
    package platform.camera {
      abstract class Camera {
          - filename : String
          + Camera()
          + simpleInit()
          + init()
          + acquireAndSetCameraCurrentView()
          - acquireAndSetCameraInformation()
          + getFilename()
          + setFilename()
          + determineActiveGoals()
          + determineActiveGoals()
          + setCalibrationGoals()
          + inRange()
      }
    }
  }
  

  package platform {
    package platform.camera {
      abstract class CameraCore {
          - url : URL
          - IP : String
          - username : String
          - password : String
          - multiCameraGoalList : List<MultiCameraGoal>
          - additionalAttributes : Map<String, Object>
          - isWorking : boolean
          - isPTZWorking : boolean
          - currentGoals : List<MultiCameraGoal>
          - streamURI : String
          + CameraCore()
          + getIdAsString()
          + addMultiCameraGoal()
          + getId()
          + setId()
          + getUrl()
          + setUrl()
          + getIP()
          + setIP()
          + getUsername()
          + setUsername()
          + getPassword()
          + setPassword()
          + getViewCapabilities()
          + setViewCapabilities()
          + getCameraOrientation()
          + setCameraOrientation()
          + getLocation()
          + setLocation()
          + getMultiCameraGoalList()
          + getAdditionalAttributes()
          + setAdditionalAttributes()
          + isWorking()
          + setWorking()
          + isPTZWorking()
          + setPTZWorking()
          + getCameraState()
          + setCameraState()
          + getCurrentView()
          + setCurrentView()
          + getTargetView()
          + setTargetView()
          + getViewControllingGoal()
          + setViewControllingGoal()
          + getCurrentGoals()
          + setCurrentGoals()
          + getStreamURI()
          + setStreamURI()
      }
    }
  }
  

  package platform {
    package platform.camera {
      interface CameraStandardSpecificFunctions {
          {abstract} + reconnectToCamera()
          {abstract} + canConnectAndSimpleInit()
          {abstract} + connectToCamera()
          {abstract} + getCameraUniqueIdentifier()
          {abstract} + acquireCameraPTZCapabilities()
          {abstract} + getCameraCurrentView()
          {abstract} + commandPTZByIMGTest()
          {abstract} + simpleUnsecuredFunctionTest()
          {abstract} + simpleSecuredFunctionTest()
          {abstract} + videoSimpleFunctionTest()
          {abstract} + videoFunctionTest()
          {abstract} + pvtSimpleMotionFunctionTest()
          {abstract} + pvtMotionFunctionTest()
          {abstract} + commandPTZMovement()
          {abstract} + commandPTZStop()
      }
    }
  }
  

  package platform {
    package platform.camera {
      class LocalONVIFCamera {
          {static} - LOGGER : Logger
          # services : List<Service>
          # profiles : List<Profile>
          # profileToken : String
          # canInstantiate : boolean
          # canRequestRTSPStream : boolean
          # canRequestProfiles : boolean
          # canRequestServices : boolean
          # canRequestInfo : boolean
          # canRequestPTZStatus : boolean
          + LocalONVIFCamera()
          + canConnectAndSimpleInit()
          + reconnectToCamera()
          + connectToCamera()
          + getCameraUniqueIdentifier()
          + acquireCameraPTZCapabilities()
          + getCameraCurrentView()
          + simpleUnsecuredFunctionTest()
          + simpleSecuredFunctionTest()
          + videoSimpleFunctionTest()
          + videoFunctionTest()
          + pvtSimpleMotionFunctionTest()
          + pvtMotionFunctionTest()
          + commandPTZByIMGTest()
          {static} + findONVIFCameraURLs()
          + commandPTZMovement()
          + commandPTZStop()
          ~ isOnline()
      }
    }
  }
  

  Camera -up-|> CameraStandardSpecificFunctions
  Camera -up-|> Serializable
  Camera -up-|> CameraCore
  CameraCore o-- CustomID : id
  CameraCore o-- ViewCapabilities : viewCapabilities
  CameraCore o-- CameraOrientation : cameraOrientation
  CameraCore o-- CameraLocation : location
  CameraCore o-- CameraState : cameraState
  CameraCore o-- CurrentView : currentView
  CameraCore o-- TargetView : targetView
  CameraCore o-- MultiCameraGoal : viewControllingGoal
  LocalONVIFCamera -up-|> Camera
  LocalONVIFCamera o-- OnvifDevice : onvifDevice
  LocalONVIFCamera o-- PtzDevices : ptzDevices


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
