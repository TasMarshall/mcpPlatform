@startuml

title __AGENTS's Class Diagram__\n

  package platform {
    package platform.agents {
      interface CameraMonitor {
          {abstract} + initCamera()
          {abstract} + testCamera()
          {abstract} + addCameraMonitorBehavior()
      }
    }
  }
  

  package platform {
    package platform.agents {
      interface Controller {
          {abstract} + initGUI()
          {abstract} + closeGUI()
          {abstract} + startWebInterface()
          {abstract} + subscribeUserToView()
          {abstract} + stopWebInterface()
          {abstract} + startView()
          {abstract} + addViewReceiver()
          {abstract} + stopView()
          {abstract} + startModel()
          {abstract} + addModelReceiver()
          {abstract} + stopModel()
          {abstract} + initInterfaces()
          {abstract} + processUserCommand()
          {abstract} + sendCommandToModelComponents()
          {abstract} + sendKillMessageToModelComponents()
          {abstract} + stopController()
      }
    }
  }
  

  package platform {
    package platform.agents {
      interface DataFuser {
          {abstract} + addAnalysisResultListeners()
          {abstract} + addSendCombinedResultToModelAgent()
          {abstract} + addAnalysisResultToData()
          {abstract} + combineResults()
          {abstract} + sendCombineResultMessage()
      }
    }
  }
  

  package platform {
    package platform.agents {
      interface MCA {
          {abstract} + addMCAExecutionLoop()
          {abstract} + addCameraMonitorListeners()
          {abstract} + addUpdateCameraAnalysers()
          {abstract} + addAnalysisResultListeners()
          {abstract} + addSnapshotListener()
          {abstract} + addCameraMonitor()
          {abstract} + addCameraStreamAnalyzer()
          {abstract} + addCameraStreamCyclicUpdate()
          {abstract} + sendCameraAnalysisUpdate()
          {abstract} + addDataFusionAgent()
      }
    }
  }
  

  package platform {
    package platform.agents {
      interface Model {
          {abstract} + addViewCyclicCommunicationBehavior()
          {abstract} + getArgs()
          {abstract} + cancelInit()
          {abstract} + addControllerReceiver()
      }
    }
  }
  

  package platform {
    package platform.agents {
      interface ModelAndMCA {
      }
    }
  }
  

  package platform {
    package platform.agents {
      interface View {
          {abstract} + addSendViewToControllerAndSubscribedUsers()
          {abstract} + addModelCyclicCommunicationReceiver()
          {abstract} + addControllerReceiver()
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
