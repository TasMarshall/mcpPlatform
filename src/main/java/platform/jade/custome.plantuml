@startuml

title __JADE's Class Diagram__\n

           package platform {
               class MultiCameraCore {
                   + Full Details in other diagram.

                   - multiCameraGoals : List<MultiCameraGoal>
                   - additionalFields : Map<String, Object>
                   - agentActions : List<CommunicationAction>
                   - cameraMonitorsAdded : boolean
                   - cameraStreamAnalyzersAdded : boolean
                   + MultiCameraCore()
                   + init()
                   + executeMAPELoop()
                   - removeNewInfo()
                   + monitor()
                   + analyse()
                   + plan()
                   + execute()
                   # addCameraMonitors()
                   # addCameraStreamAnalyzers()
                   + createHeartBeat()
                   + createCameraStreamAnalysisUpdateMessage()
                   + addCoreBehaviours()
                   + buildComponentsAndBehaviors()
                   + createGlobalMap()
                   + getGoalById()
                   + getAllCameras()
                   + getGlobalMap()
                   + setGlobalMap()
                   + getCameraMonitor()
                   + setCameraMonitor()
                   + setAdditionalFields()
                   + getMultiCameraGoals()
                   + setMultiCameraGoals()
                   + getAdditionalFields()
                   + getCameraManager()
                   + setCameraManager()
                   + getAnalysisTypeManager()
                   + setAnalysisTypeManager()
                   + getAdaptationTypeManager()
                   + getHeartbeat()
                   + getCameraMonitorsAdded()
               }
             }

             package platform {
                 package platform.jade {
                   class CameraManagerAgent {
                       ~ filename : String
                       ~ mca_name : String
                       # setup()
                   }
                 }
               }

     package platform {
        package platform.jade {
          class ControllerAgent {
            + Full Details in other diagram.
          }
        }
      }

     package platform {
        package platform.jade {
          class ModelAgent {
            + Full Details in other diagram.
          }
        }
      }

    package platform {
      package platform.jade {
        class ViewAgent {
            + Full Details in other diagram.
        }
      }
    }

      package platform {
        package platform.jade {
          class DataFusionAgent {
              ~ mcaName : String
              ~ analysisResultMap : Map<String, AnalysisResultsMessage>
              # setup()
              + addAnalysisResultToData()
              + combineResults()
          }
        }
      }

        package platform {
          package platform.jade {
            abstract class DataFusionAgentImpl {
                + addAnalysisResultListeners()
                + addSendCombinedResultToModelAgent()
                + sendCombineResultMessage()
            }
          }
        }


     package platform {
        interface DataFuser {
            {abstract} + addAnalysisResultListeners()
            {abstract} + addSendCombinedResultToModelAgent()
            {abstract} + addAnalysisResultToData()
            {abstract} + combineResults()
            {abstract} + sendCombineResultMessage()
        }
      }

       package platform {
          package platform.jade {
            abstract class ControlledAgentImpl {
                + addControllerReceiver()
            }
          }
        }

  package platform {
    package platform.jade {
      class CameraMonitorAgent {
          ~ filename : String
          ~ mca_name : String
          # setup()
      }
    }
  }

        package platform {
          package platform.jade {
            class AnalysisAgent {
                ~ mca_name : String
                ~ cameraID : String
                ~ streamURI : String
                ~ username : String
                ~ password : String
                ~ cameraWorking : boolean
                ~ cameraType : String
                ~ mode : String
                ~ testMode : boolean
                ~ snapShotTaken : boolean
                - currentGoalImageAnalyzers : HashMap<String, ImageAnalyzer>
                - storedAnalysisInformation : Map<String, Object>
                - frame : JFrame
                + setup()
                + takeDown()
                - addCoreComponents()
                - updateImageAnalyzers()
                - addCameraStream()
                - addCoreBehaviours()
                - addAnalyzerExecution()
                - addCameraGoalListener()
                - addSnapshotListener()
                - addCameraMonitorListener()
                + addControllerListener()
            }
          }
        }


  ModelAgent o-- MultiCameraCore : multiCameraCore

  ViewAgent -up-|> ControlledAgentImpl
  ModelAgent -up-|> ControlledAgentImpl

  DataFusionAgent -up-|> DataFusionAgentImpl

  DataFusionAgentImpl -up-|> DataFuser
  DataFusionAgentImpl -up-|> ControlledAgentImpl

  AnalysisAgent -up-|> ControlledAgentImpl

  CameraMonitorAgent -up-|> ControlledAgentImpl
  CameraManagerAgent -up-|> ControlledAgentImpl

@enduml
